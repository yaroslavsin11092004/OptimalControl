// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core.proto
// Protobuf C++ Version: 6.33.0-dev

#include "core.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace core_api {
template <typename>
PROTOBUF_CONSTEXPR OptimizeParamsResponse::OptimizeParamsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(OptimizeParamsResponse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct OptimizeParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptimizeParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptimizeParamsResponseDefaultTypeInternal() {}
  union {
    OptimizeParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptimizeParamsResponseDefaultTypeInternal _OptimizeParamsResponse_default_instance_;

inline constexpr OptimizeParamsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        left_edge_{},
        right_edge_{},
        learning_rate_{0},
        epochs_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OptimizeParamsRequest::OptimizeParamsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OptimizeParamsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OptimizeParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptimizeParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptimizeParamsRequestDefaultTypeInternal() {}
  union {
    OptimizeParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptimizeParamsRequestDefaultTypeInternal _OptimizeParamsRequest_default_instance_;

inline constexpr OptimalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        optim_path_{},
        optim_control_{},
        optim_path_size_row_{0},
        optim_path_size_col_{0},
        optim_control_size_row_{0},
        optim_control_size_col_{0},
        functional_value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OptimalResponse::OptimalResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OptimalResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OptimalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptimalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptimalResponseDefaultTypeInternal() {}
  union {
    OptimalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptimalResponseDefaultTypeInternal _OptimalResponse_default_instance_;

inline constexpr OptimalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        equations_{},
        linked_{},
        u0_{},
        x0_{},
        hamilton_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        functional_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        t0_{0},
        t1_{0},
        tstep_{0},
        delta_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OptimalRequest::OptimalRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OptimalRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OptimalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptimalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptimalRequestDefaultTypeInternal() {}
  union {
    OptimalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptimalRequestDefaultTypeInternal _OptimalRequest_default_instance_;
}  // namespace core_api
static constexpr const ::_pb::EnumDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_enum_descriptors_core_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_service_descriptors_core_2eproto = nullptr;
const ::uint32_t
    TableStruct_core_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_._has_bits_),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.equations_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.linked_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.hamilton_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.functional_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.u0_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.x0_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.t0_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.t1_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.tstep_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalRequest, _impl_.delta_),
        0,
        1,
        4,
        5,
        2,
        3,
        6,
        7,
        8,
        9,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_.optim_path_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_.optim_control_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_.optim_path_size_row_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_.optim_path_size_col_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_.optim_control_size_row_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_.optim_control_size_col_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimalResponse, _impl_.functional_value_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::core_api::OptimizeParamsRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::core_api::OptimizeParamsRequest, _impl_.learning_rate_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimizeParamsRequest, _impl_.left_edge_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimizeParamsRequest, _impl_.right_edge_),
        PROTOBUF_FIELD_OFFSET(::core_api::OptimizeParamsRequest, _impl_.epochs_),
        2,
        0,
        1,
        3,
        0x000, // bitmap
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::core_api::OptimalRequest)},
        {23, sizeof(::core_api::OptimalResponse)},
        {40, sizeof(::core_api::OptimizeParamsRequest)},
        {51, sizeof(::core_api::OptimizeParamsResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::core_api::_OptimalRequest_default_instance_._instance,
    &::core_api::_OptimalResponse_default_instance_._instance,
    &::core_api::_OptimizeParamsRequest_default_instance_._instance,
    &::core_api::_OptimizeParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_core_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ncore.proto\022\010core_api\"\247\001\n\016OptimalReques"
    "t\022\021\n\tequations\030\001 \003(\t\022\016\n\006linked\030\002 \003(\t\022\020\n\010"
    "hamilton\030\003 \001(\t\022\022\n\nfunctional\030\004 \001(\t\022\n\n\002u0"
    "\030\005 \003(\001\022\n\n\002x0\030\006 \003(\001\022\n\n\002t0\030\007 \001(\001\022\n\n\002t1\030\010 \001"
    "(\001\022\r\n\005tstep\030\t \001(\001\022\r\n\005delta\030\n \001(\001\"\320\001\n\017Opt"
    "imalResponse\022\022\n\noptim_path\030\001 \003(\001\022\025\n\ropti"
    "m_control\030\002 \003(\001\022\033\n\023optim_path_size_row\030\003"
    " \001(\005\022\033\n\023optim_path_size_col\030\004 \001(\005\022\036\n\026opt"
    "im_control_size_row\030\005 \001(\005\022\036\n\026optim_contr"
    "ol_size_col\030\006 \001(\005\022\030\n\020functional_value\030\007 "
    "\001(\001\"e\n\025OptimizeParamsRequest\022\025\n\rlearning"
    "_rate\030\001 \001(\001\022\021\n\tleft_edge\030\002 \003(\001\022\022\n\nright_"
    "edge\030\003 \003(\001\022\016\n\006epochs\030\004 \001(\005\"\030\n\026OptimizePa"
    "ramsResponse2\274\001\n\031CoreOptimalControlServi"
    "ce\022F\n\017CalcOptimalTask\022\030.core_api.Optimal"
    "Request\032\031.core_api.OptimalResponse\022W\n\022Se"
    "tOptimizerParams\022\037.core_api.OptimizePara"
    "msRequest\032 .core_api.OptimizeParamsRespo"
    "nseb\006proto3"
};
static ::absl::once_flag descriptor_table_core_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_core_2eproto = {
    false,
    false,
    731,
    descriptor_table_protodef_core_2eproto,
    "core.proto",
    &descriptor_table_core_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_core_2eproto::offsets,
    file_level_enum_descriptors_core_2eproto,
    file_level_service_descriptors_core_2eproto,
};
namespace core_api {
// ===================================================================

class OptimalRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OptimalRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_._has_bits_);
};

OptimalRequest::OptimalRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OptimalRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core_api.OptimalRequest)
}
PROTOBUF_NDEBUG_INLINE OptimalRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::core_api::OptimalRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        equations_{visibility, arena, from.equations_},
        linked_{visibility, arena, from.linked_},
        u0_{visibility, arena, from.u0_},
        x0_{visibility, arena, from.x0_},
        hamilton_(arena, from.hamilton_),
        functional_(arena, from.functional_) {}

OptimalRequest::OptimalRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OptimalRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OptimalRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OptimalRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, t0_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, t0_),
           offsetof(Impl_, delta_) -
               offsetof(Impl_, t0_) +
               sizeof(Impl_::delta_));

  // @@protoc_insertion_point(copy_constructor:core_api.OptimalRequest)
}
PROTOBUF_NDEBUG_INLINE OptimalRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        equations_{visibility, arena},
        linked_{visibility, arena},
        u0_{visibility, arena},
        x0_{visibility, arena},
        hamilton_(arena),
        functional_(arena) {}

inline void OptimalRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, t0_),
           0,
           offsetof(Impl_, delta_) -
               offsetof(Impl_, t0_) +
               sizeof(Impl_::delta_));
}
OptimalRequest::~OptimalRequest() {
  // @@protoc_insertion_point(destructor:core_api.OptimalRequest)
  SharedDtor(*this);
}
inline void OptimalRequest::SharedDtor(MessageLite& self) {
  OptimalRequest& this_ = static_cast<OptimalRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hamilton_.Destroy();
  this_._impl_.functional_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OptimalRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OptimalRequest(arena);
}
constexpr auto OptimalRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.equations_) +
          decltype(OptimalRequest::_impl_.equations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.linked_) +
          decltype(OptimalRequest::_impl_.linked_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.u0_) +
          decltype(OptimalRequest::_impl_.u0_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.x0_) +
          decltype(OptimalRequest::_impl_.x0_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OptimalRequest), alignof(OptimalRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OptimalRequest::PlacementNew_,
                                 sizeof(OptimalRequest),
                                 alignof(OptimalRequest));
  }
}
constexpr auto OptimalRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OptimalRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OptimalRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OptimalRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OptimalRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OptimalRequest>(), &OptimalRequest::ByteSizeLong,
              &OptimalRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_._cached_size_),
          false,
      },
      &OptimalRequest::kDescriptorMethods,
      &descriptor_table_core_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OptimalRequest_class_data_ =
        OptimalRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OptimalRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OptimalRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OptimalRequest_class_data_.tc_table);
  return OptimalRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 73, 2>
OptimalRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OptimalRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core_api::OptimalRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string equations = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.equations_)}},
    // repeated string linked = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.linked_)}},
    // string hamilton = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 4, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.hamilton_)}},
    // string functional = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 5, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.functional_)}},
    // repeated double u0 = 5;
    {::_pbi::TcParser::FastF64P1,
     {42, 2, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.u0_)}},
    // repeated double x0 = 6;
    {::_pbi::TcParser::FastF64P1,
     {50, 3, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.x0_)}},
    // double t0 = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 6, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.t0_)}},
    // double t1 = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 7, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.t1_)}},
    // double tstep = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 8, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.tstep_)}},
    // double delta = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 9, 0,
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.delta_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string equations = 1;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.equations_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string linked = 2;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.linked_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string hamilton = 3;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.hamilton_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string functional = 4;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.functional_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated double u0 = 5;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.u0_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double x0 = 6;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.x0_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // double t0 = 7;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.t0_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double t1 = 8;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.t1_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double tstep = 9;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.tstep_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double delta = 10;
    {PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.delta_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\27\11\6\10\12\0\0\0\0\0\0\0\0\0\0\0"
    "core_api.OptimalRequest"
    "equations"
    "linked"
    "hamilton"
    "functional"
  }},
};
PROTOBUF_NOINLINE void OptimalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core_api.OptimalRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000003fU)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _impl_.equations_.Clear();
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _impl_.linked_.Clear();
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000004U)) {
      _impl_.u0_.Clear();
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000008U)) {
      _impl_.x0_.Clear();
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      _impl_.hamilton_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      _impl_.functional_.ClearNonDefaultToEmpty();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x000000c0U)) {
    ::memset(&_impl_.t0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.t1_) -
        reinterpret_cast<char*>(&_impl_.t0_)) + sizeof(_impl_.t1_));
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000300U)) {
    ::memset(&_impl_.tstep_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.delta_) -
        reinterpret_cast<char*>(&_impl_.tstep_)) + sizeof(_impl_.delta_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OptimalRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OptimalRequest& this_ = static_cast<const OptimalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OptimalRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OptimalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:core_api.OptimalRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // repeated string equations = 1;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    for (int i = 0, n = this_._internal_equations_size(); i < n; ++i) {
      const auto& s = this_._internal_equations().Get(i);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core_api.OptimalRequest.equations");
      target = stream->WriteString(1, s, target);
    }
  }

  // repeated string linked = 2;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
    for (int i = 0, n = this_._internal_linked_size(); i < n; ++i) {
      const auto& s = this_._internal_linked().Get(i);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core_api.OptimalRequest.linked");
      target = stream->WriteString(2, s, target);
    }
  }

  // string hamilton = 3;
  if (CheckHasBit(cached_has_bits, 0x00000010U)) {
    if (!this_._internal_hamilton().empty()) {
      const ::std::string& _s = this_._internal_hamilton();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core_api.OptimalRequest.hamilton");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string functional = 4;
  if (CheckHasBit(cached_has_bits, 0x00000020U)) {
    if (!this_._internal_functional().empty()) {
      const ::std::string& _s = this_._internal_functional();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core_api.OptimalRequest.functional");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // repeated double u0 = 5;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000004U)) {
    if (this_._internal_u0_size() > 0) {
      target = stream->WriteFixedPacked(5, this_._internal_u0(), target);
    }
  }

  // repeated double x0 = 6;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000008U)) {
    if (this_._internal_x0_size() > 0) {
      target = stream->WriteFixedPacked(6, this_._internal_x0(), target);
    }
  }

  // double t0 = 7;
  if (CheckHasBit(cached_has_bits, 0x00000040U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_t0()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          7, this_._internal_t0(), target);
    }
  }

  // double t1 = 8;
  if (CheckHasBit(cached_has_bits, 0x00000080U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_t1()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          8, this_._internal_t1(), target);
    }
  }

  // double tstep = 9;
  if (CheckHasBit(cached_has_bits, 0x00000100U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_tstep()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          9, this_._internal_tstep(), target);
    }
  }

  // double delta = 10;
  if (CheckHasBit(cached_has_bits, 0x00000200U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_delta()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          10, this_._internal_delta(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core_api.OptimalRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OptimalRequest::ByteSizeLong(const MessageLite& base) {
  const OptimalRequest& this_ = static_cast<const OptimalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OptimalRequest::ByteSizeLong() const {
  const OptimalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:core_api.OptimalRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x000000ffU)) {
    // repeated string equations = 1;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_equations().size());
      for (int i = 0, n = this_._internal_equations().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_equations().Get(i));
      }
    }
    // repeated string linked = 2;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_linked().size());
      for (int i = 0, n = this_._internal_linked().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_linked().Get(i));
      }
    }
    // repeated double u0 = 5;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000004U)) {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_u0_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // repeated double x0 = 6;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000008U)) {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_x0_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // string hamilton = 3;
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (!this_._internal_hamilton().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_hamilton());
      }
    }
    // string functional = 4;
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (!this_._internal_functional().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_functional());
      }
    }
    // double t0 = 7;
    if (CheckHasBit(cached_has_bits, 0x00000040U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_t0()) != 0) {
        total_size += 9;
      }
    }
    // double t1 = 8;
    if (CheckHasBit(cached_has_bits, 0x00000080U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_t1()) != 0) {
        total_size += 9;
      }
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000300U)) {
    // double tstep = 9;
    if (CheckHasBit(cached_has_bits, 0x00000100U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_tstep()) != 0) {
        total_size += 9;
      }
    }
    // double delta = 10;
    if (CheckHasBit(cached_has_bits, 0x00000200U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_delta()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OptimalRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<OptimalRequest*>(&to_msg);
  auto& from = static_cast<const OptimalRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:core_api.OptimalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x000000ffU)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _this->_internal_mutable_equations()->MergeFrom(from._internal_equations());
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _this->_internal_mutable_linked()->MergeFrom(from._internal_linked());
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000004U)) {
      _this->_internal_mutable_u0()->MergeFrom(from._internal_u0());
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000008U)) {
      _this->_internal_mutable_x0()->MergeFrom(from._internal_x0());
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (!from._internal_hamilton().empty()) {
        _this->_internal_set_hamilton(from._internal_hamilton());
      } else {
        if (_this->_impl_.hamilton_.IsDefault()) {
          _this->_internal_set_hamilton("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (!from._internal_functional().empty()) {
        _this->_internal_set_functional(from._internal_functional());
      } else {
        if (_this->_impl_.functional_.IsDefault()) {
          _this->_internal_set_functional("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000040U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_t0()) != 0) {
        _this->_impl_.t0_ = from._impl_.t0_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000080U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_t1()) != 0) {
        _this->_impl_.t1_ = from._impl_.t1_;
      }
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000300U)) {
    if (CheckHasBit(cached_has_bits, 0x00000100U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_tstep()) != 0) {
        _this->_impl_.tstep_ = from._impl_.tstep_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000200U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_delta()) != 0) {
        _this->_impl_.delta_ = from._impl_.delta_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void OptimalRequest::CopyFrom(const OptimalRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:core_api.OptimalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OptimalRequest::InternalSwap(OptimalRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.equations_.InternalSwap(&other->_impl_.equations_);
  _impl_.linked_.InternalSwap(&other->_impl_.linked_);
  _impl_.u0_.InternalSwap(&other->_impl_.u0_);
  _impl_.x0_.InternalSwap(&other->_impl_.x0_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hamilton_, &other->_impl_.hamilton_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.functional_, &other->_impl_.functional_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.delta_)
      + sizeof(OptimalRequest::_impl_.delta_)
      - PROTOBUF_FIELD_OFFSET(OptimalRequest, _impl_.t0_)>(
          reinterpret_cast<char*>(&_impl_.t0_),
          reinterpret_cast<char*>(&other->_impl_.t0_));
}

::google::protobuf::Metadata OptimalRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OptimalResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OptimalResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_._has_bits_);
};

OptimalResponse::OptimalResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OptimalResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core_api.OptimalResponse)
}
PROTOBUF_NDEBUG_INLINE OptimalResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::core_api::OptimalResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        optim_path_{visibility, arena, from.optim_path_},
        optim_control_{visibility, arena, from.optim_control_} {}

OptimalResponse::OptimalResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OptimalResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OptimalResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OptimalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, optim_path_size_row_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, optim_path_size_row_),
           offsetof(Impl_, functional_value_) -
               offsetof(Impl_, optim_path_size_row_) +
               sizeof(Impl_::functional_value_));

  // @@protoc_insertion_point(copy_constructor:core_api.OptimalResponse)
}
PROTOBUF_NDEBUG_INLINE OptimalResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        optim_path_{visibility, arena},
        optim_control_{visibility, arena} {}

inline void OptimalResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, optim_path_size_row_),
           0,
           offsetof(Impl_, functional_value_) -
               offsetof(Impl_, optim_path_size_row_) +
               sizeof(Impl_::functional_value_));
}
OptimalResponse::~OptimalResponse() {
  // @@protoc_insertion_point(destructor:core_api.OptimalResponse)
  SharedDtor(*this);
}
inline void OptimalResponse::SharedDtor(MessageLite& self) {
  OptimalResponse& this_ = static_cast<OptimalResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OptimalResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OptimalResponse(arena);
}
constexpr auto OptimalResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_) +
          decltype(OptimalResponse::_impl_.optim_path_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_control_) +
          decltype(OptimalResponse::_impl_.optim_control_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OptimalResponse), alignof(OptimalResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OptimalResponse::PlacementNew_,
                                 sizeof(OptimalResponse),
                                 alignof(OptimalResponse));
  }
}
constexpr auto OptimalResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OptimalResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OptimalResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OptimalResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OptimalResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OptimalResponse>(), &OptimalResponse::ByteSizeLong,
              &OptimalResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_._cached_size_),
          false,
      },
      &OptimalResponse::kDescriptorMethods,
      &descriptor_table_core_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OptimalResponse_class_data_ =
        OptimalResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OptimalResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OptimalResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OptimalResponse_class_data_.tc_table);
  return OptimalResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
OptimalResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OptimalResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core_api::OptimalResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double optim_path = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_)}},
    // repeated double optim_control = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_control_)}},
    // int32 optim_path_size_row = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OptimalResponse, _impl_.optim_path_size_row_), 2>(),
     {24, 2, 0,
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_size_row_)}},
    // int32 optim_path_size_col = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OptimalResponse, _impl_.optim_path_size_col_), 3>(),
     {32, 3, 0,
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_size_col_)}},
    // int32 optim_control_size_row = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OptimalResponse, _impl_.optim_control_size_row_), 4>(),
     {40, 4, 0,
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_control_size_row_)}},
    // int32 optim_control_size_col = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OptimalResponse, _impl_.optim_control_size_col_), 5>(),
     {48, 5, 0,
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_control_size_col_)}},
    // double functional_value = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 6, 0,
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.functional_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double optim_path = 1;
    {PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double optim_control = 2;
    {PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_control_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // int32 optim_path_size_row = 3;
    {PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_size_row_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 optim_path_size_col = 4;
    {PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_size_col_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 optim_control_size_row = 5;
    {PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_control_size_row_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 optim_control_size_col = 6;
    {PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_control_size_col_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double functional_value = 7;
    {PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.functional_value_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void OptimalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:core_api.OptimalResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _impl_.optim_path_.Clear();
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _impl_.optim_control_.Clear();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x0000007cU)) {
    ::memset(&_impl_.optim_path_size_row_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.functional_value_) -
        reinterpret_cast<char*>(&_impl_.optim_path_size_row_)) + sizeof(_impl_.functional_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OptimalResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OptimalResponse& this_ = static_cast<const OptimalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OptimalResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OptimalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:core_api.OptimalResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // repeated double optim_path = 1;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    if (this_._internal_optim_path_size() > 0) {
      target = stream->WriteFixedPacked(1, this_._internal_optim_path(), target);
    }
  }

  // repeated double optim_control = 2;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
    if (this_._internal_optim_control_size() > 0) {
      target = stream->WriteFixedPacked(2, this_._internal_optim_control(), target);
    }
  }

  // int32 optim_path_size_row = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_optim_path_size_row() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_optim_path_size_row(), target);
    }
  }

  // int32 optim_path_size_col = 4;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (this_._internal_optim_path_size_col() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_optim_path_size_col(), target);
    }
  }

  // int32 optim_control_size_row = 5;
  if (CheckHasBit(cached_has_bits, 0x00000010U)) {
    if (this_._internal_optim_control_size_row() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_optim_control_size_row(), target);
    }
  }

  // int32 optim_control_size_col = 6;
  if (CheckHasBit(cached_has_bits, 0x00000020U)) {
    if (this_._internal_optim_control_size_col() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_optim_control_size_col(), target);
    }
  }

  // double functional_value = 7;
  if (CheckHasBit(cached_has_bits, 0x00000040U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_functional_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          7, this_._internal_functional_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core_api.OptimalResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OptimalResponse::ByteSizeLong(const MessageLite& base) {
  const OptimalResponse& this_ = static_cast<const OptimalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OptimalResponse::ByteSizeLong() const {
  const OptimalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:core_api.OptimalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000007fU)) {
    // repeated double optim_path = 1;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_optim_path_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // repeated double optim_control = 2;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_optim_control_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // int32 optim_path_size_row = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_optim_path_size_row() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_optim_path_size_row());
      }
    }
    // int32 optim_path_size_col = 4;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (this_._internal_optim_path_size_col() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_optim_path_size_col());
      }
    }
    // int32 optim_control_size_row = 5;
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (this_._internal_optim_control_size_row() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_optim_control_size_row());
      }
    }
    // int32 optim_control_size_col = 6;
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (this_._internal_optim_control_size_col() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_optim_control_size_col());
      }
    }
    // double functional_value = 7;
    if (CheckHasBit(cached_has_bits, 0x00000040U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_functional_value()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OptimalResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<OptimalResponse*>(&to_msg);
  auto& from = static_cast<const OptimalResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:core_api.OptimalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000007fU)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _this->_internal_mutable_optim_path()->MergeFrom(from._internal_optim_path());
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _this->_internal_mutable_optim_control()->MergeFrom(from._internal_optim_control());
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_optim_path_size_row() != 0) {
        _this->_impl_.optim_path_size_row_ = from._impl_.optim_path_size_row_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (from._internal_optim_path_size_col() != 0) {
        _this->_impl_.optim_path_size_col_ = from._impl_.optim_path_size_col_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (from._internal_optim_control_size_row() != 0) {
        _this->_impl_.optim_control_size_row_ = from._impl_.optim_control_size_row_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (from._internal_optim_control_size_col() != 0) {
        _this->_impl_.optim_control_size_col_ = from._impl_.optim_control_size_col_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000040U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_functional_value()) != 0) {
        _this->_impl_.functional_value_ = from._impl_.functional_value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void OptimalResponse::CopyFrom(const OptimalResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:core_api.OptimalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OptimalResponse::InternalSwap(OptimalResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.optim_path_.InternalSwap(&other->_impl_.optim_path_);
  _impl_.optim_control_.InternalSwap(&other->_impl_.optim_control_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.functional_value_)
      + sizeof(OptimalResponse::_impl_.functional_value_)
      - PROTOBUF_FIELD_OFFSET(OptimalResponse, _impl_.optim_path_size_row_)>(
          reinterpret_cast<char*>(&_impl_.optim_path_size_row_),
          reinterpret_cast<char*>(&other->_impl_.optim_path_size_row_));
}

::google::protobuf::Metadata OptimalResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OptimizeParamsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OptimizeParamsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_._has_bits_);
};

OptimizeParamsRequest::OptimizeParamsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OptimizeParamsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core_api.OptimizeParamsRequest)
}
PROTOBUF_NDEBUG_INLINE OptimizeParamsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::core_api::OptimizeParamsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        left_edge_{visibility, arena, from.left_edge_},
        right_edge_{visibility, arena, from.right_edge_} {}

OptimizeParamsRequest::OptimizeParamsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OptimizeParamsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OptimizeParamsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OptimizeParamsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, learning_rate_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, learning_rate_),
           offsetof(Impl_, epochs_) -
               offsetof(Impl_, learning_rate_) +
               sizeof(Impl_::epochs_));

  // @@protoc_insertion_point(copy_constructor:core_api.OptimizeParamsRequest)
}
PROTOBUF_NDEBUG_INLINE OptimizeParamsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        left_edge_{visibility, arena},
        right_edge_{visibility, arena} {}

inline void OptimizeParamsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, learning_rate_),
           0,
           offsetof(Impl_, epochs_) -
               offsetof(Impl_, learning_rate_) +
               sizeof(Impl_::epochs_));
}
OptimizeParamsRequest::~OptimizeParamsRequest() {
  // @@protoc_insertion_point(destructor:core_api.OptimizeParamsRequest)
  SharedDtor(*this);
}
inline void OptimizeParamsRequest::SharedDtor(MessageLite& self) {
  OptimizeParamsRequest& this_ = static_cast<OptimizeParamsRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OptimizeParamsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OptimizeParamsRequest(arena);
}
constexpr auto OptimizeParamsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.left_edge_) +
          decltype(OptimizeParamsRequest::_impl_.left_edge_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.right_edge_) +
          decltype(OptimizeParamsRequest::_impl_.right_edge_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OptimizeParamsRequest), alignof(OptimizeParamsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OptimizeParamsRequest::PlacementNew_,
                                 sizeof(OptimizeParamsRequest),
                                 alignof(OptimizeParamsRequest));
  }
}
constexpr auto OptimizeParamsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OptimizeParamsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OptimizeParamsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OptimizeParamsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OptimizeParamsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OptimizeParamsRequest>(), &OptimizeParamsRequest::ByteSizeLong,
              &OptimizeParamsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_._cached_size_),
          false,
      },
      &OptimizeParamsRequest::kDescriptorMethods,
      &descriptor_table_core_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OptimizeParamsRequest_class_data_ =
        OptimizeParamsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OptimizeParamsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OptimizeParamsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OptimizeParamsRequest_class_data_.tc_table);
  return OptimizeParamsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
OptimizeParamsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OptimizeParamsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core_api::OptimizeParamsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 epochs = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OptimizeParamsRequest, _impl_.epochs_), 3>(),
     {32, 3, 0,
      PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.epochs_)}},
    // double learning_rate = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0,
      PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.learning_rate_)}},
    // repeated double left_edge = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.left_edge_)}},
    // repeated double right_edge = 3;
    {::_pbi::TcParser::FastF64P1,
     {26, 1, 0,
      PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.right_edge_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double learning_rate = 1;
    {PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.learning_rate_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated double left_edge = 2;
    {PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.left_edge_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double right_edge = 3;
    {PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.right_edge_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // int32 epochs = 4;
    {PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.epochs_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void OptimizeParamsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core_api.OptimizeParamsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _impl_.left_edge_.Clear();
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _impl_.right_edge_.Clear();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x0000000cU)) {
    ::memset(&_impl_.learning_rate_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.epochs_) -
        reinterpret_cast<char*>(&_impl_.learning_rate_)) + sizeof(_impl_.epochs_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OptimizeParamsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OptimizeParamsRequest& this_ = static_cast<const OptimizeParamsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OptimizeParamsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OptimizeParamsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:core_api.OptimizeParamsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // double learning_rate = 1;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_learning_rate()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_learning_rate(), target);
    }
  }

  // repeated double left_edge = 2;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    if (this_._internal_left_edge_size() > 0) {
      target = stream->WriteFixedPacked(2, this_._internal_left_edge(), target);
    }
  }

  // repeated double right_edge = 3;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
    if (this_._internal_right_edge_size() > 0) {
      target = stream->WriteFixedPacked(3, this_._internal_right_edge(), target);
    }
  }

  // int32 epochs = 4;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (this_._internal_epochs() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_epochs(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core_api.OptimizeParamsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OptimizeParamsRequest::ByteSizeLong(const MessageLite& base) {
  const OptimizeParamsRequest& this_ = static_cast<const OptimizeParamsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OptimizeParamsRequest::ByteSizeLong() const {
  const OptimizeParamsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:core_api.OptimizeParamsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    // repeated double left_edge = 2;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_left_edge_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // repeated double right_edge = 3;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_right_edge_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // double learning_rate = 1;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_learning_rate()) != 0) {
        total_size += 9;
      }
    }
    // int32 epochs = 4;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (this_._internal_epochs() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_epochs());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OptimizeParamsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<OptimizeParamsRequest*>(&to_msg);
  auto& from = static_cast<const OptimizeParamsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:core_api.OptimizeParamsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _this->_internal_mutable_left_edge()->MergeFrom(from._internal_left_edge());
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _this->_internal_mutable_right_edge()->MergeFrom(from._internal_right_edge());
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_learning_rate()) != 0) {
        _this->_impl_.learning_rate_ = from._impl_.learning_rate_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (from._internal_epochs() != 0) {
        _this->_impl_.epochs_ = from._impl_.epochs_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void OptimizeParamsRequest::CopyFrom(const OptimizeParamsRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:core_api.OptimizeParamsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OptimizeParamsRequest::InternalSwap(OptimizeParamsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.left_edge_.InternalSwap(&other->_impl_.left_edge_);
  _impl_.right_edge_.InternalSwap(&other->_impl_.right_edge_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.epochs_)
      + sizeof(OptimizeParamsRequest::_impl_.epochs_)
      - PROTOBUF_FIELD_OFFSET(OptimizeParamsRequest, _impl_.learning_rate_)>(
          reinterpret_cast<char*>(&_impl_.learning_rate_),
          reinterpret_cast<char*>(&other->_impl_.learning_rate_));
}

::google::protobuf::Metadata OptimizeParamsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OptimizeParamsResponse::_Internal {
 public:
};

OptimizeParamsResponse::OptimizeParamsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, OptimizeParamsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:core_api.OptimizeParamsResponse)
}
OptimizeParamsResponse::OptimizeParamsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OptimizeParamsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, OptimizeParamsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OptimizeParamsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:core_api.OptimizeParamsResponse)
}

inline void* PROTOBUF_NONNULL OptimizeParamsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OptimizeParamsResponse(arena);
}
constexpr auto OptimizeParamsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OptimizeParamsResponse),
                                            alignof(OptimizeParamsResponse));
}
constexpr auto OptimizeParamsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OptimizeParamsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OptimizeParamsResponse::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<OptimizeParamsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OptimizeParamsResponse::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<OptimizeParamsResponse>(), &OptimizeParamsResponse::ByteSizeLong,
              &OptimizeParamsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OptimizeParamsResponse, _impl_._cached_size_),
          false,
      },
      &OptimizeParamsResponse::kDescriptorMethods,
      &descriptor_table_core_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OptimizeParamsResponse_class_data_ =
        OptimizeParamsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OptimizeParamsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OptimizeParamsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OptimizeParamsResponse_class_data_.tc_table);
  return OptimizeParamsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
OptimizeParamsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OptimizeParamsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core_api::OptimizeParamsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata OptimizeParamsResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace core_api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_core_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
